/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Reset default browser CSS   */
* {
    margin: 0;
    padding: 0;
    /* borders and paddings are not added to width and height of box - 
    * i.e. padding does not cause width to increase
    */
    box-sizing: border-box;
}

/* Why use body for global font ? 
    fonts are inherited by ALL child elements of body
 */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    /* this box - 95 % of viewport height */
    height: 95vh;
    /* 'two' background images - gradient first - then pic */
    background-image: 
        linear-gradient(
        to right bottom, rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8)), 
    url('../img/hero.jpg');
    /* whatever width of viewport - always fit element of box */
    background-size: cover;
    /* 'top' of image always focused as we change screen size */
    background-position: top;
    position: relative;
    /* clip out path where you want the element content to be visible
        - i.e. 'make triangle at bottom' - set all 4 cordinates for element
    */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    /* Top and left based on parent element - with position relative 
        - on .header
    */
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    /* old school centering */
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;
    /* Fix animation 'shake' */
    backface-visibility: hidden;
    margin-bottom: 60px;
}

.heading-primary-main {
    /* block occupies entire width + create line breaks */
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    /* animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; 
     ==== Same as below
    */
    animation: moveInLeft 1s ease-out;
    /* Sample animations properties */
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    /* Before animation starts */
    0% {
        opacity: 0;
        /* X is horizontal - 'left -100px' */
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    /* Animation finished */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    /* Before animation starts */
    0% {
        opacity: 0;
        /* X is horizontal - 'left -100px' */
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    /* Animation finished */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    /* Before animation starts */
    0% {
        opacity: 0;
        /* X is horizontal - 'left -100px' */
        transform: translateY(30px);
    }
    /* Animation finished */
    100% {
        opacity: 1;
        transform: translate(0);
    }
}
/* :link pseudoclass - style element under special states */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    /* inline ---> can use text align in parent (.text-box) */
    display: inline-block;
    border-radius: 100px;
    /* transition has to be on initial state 
        --> applied on new pseudostates (e.g. :hover ) */
    transition: all .2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    /* 1: X-direction(0) 2: Y-direction(10px) 3:blur 4: color */
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

/* when click */
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 20px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #FFF;
    color:#777;
}

/* insert content to page from CSS - won't appear in DOM */
.btn::after {
    /* content & display have to be present */
    content: "";
    display: inline-block;
    /* height and width refers to element (e.g. btn) */
    height: 100%;
    width: 100%;
    border-radius: 100px;
    /* place behind element (.btn) - i.e. hidden */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all.4s;
}

.btn-white::after {
    background-color: #FFF;
}

/* When we hover btn apply these ::after styles */
.btn:hover::after {
    /* scale - changes the size - 2 --> double */
    transform: scaleX(1.2) scaleY(1.4);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom 0.5s ease-out;
    animation-delay: 0.75s;
    /*  apply 0% animation before animation starts */
    animation-fill-mode: backwards;
}